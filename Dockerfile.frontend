# 🐳 Frontend Dockerfile
# 상용화 수준의 React + Vite 프론트엔드 컨테이너

# 멀티 스테이지 빌드: Node.js 빌드 스테이지
FROM node:18-alpine AS builder

# 빌드 최적화를 위한 환경 변수
ENV NODE_ENV=production
ENV VITE_BUILD_MODE=production

WORKDIR /app

# 패키지 파일 복사 및 의존성 설치
COPY package*.json ./
RUN npm ci --only=production --silent && npm cache clean --force

# 소스 코드 복사
COPY . .

# Vite 빌드 실행
RUN npm run build

# 프로덕션 서빙 스테이지: Nginx
FROM nginx:1.25-alpine AS runtime

# 보안 업데이트
RUN apk update && apk upgrade

# 빌드된 파일을 nginx로 복사
COPY --from=builder /app/dist /usr/share/nginx/html

# 커스텀 nginx 설정 복사
COPY nginx.conf /etc/nginx/nginx.conf
COPY nginx.default.conf /etc/nginx/conf.d/default.conf

# 포트 노출
EXPOSE 80

# 헬스체크 추가
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# nginx 시작
CMD ["nginx", "-g", "daemon off;"]
